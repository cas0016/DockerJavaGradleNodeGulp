buildscript {
    ext {
        springBootVersion = '1.3.0.RELEASE'
    }
    repositories {
        maven{
    		url "http://repo1.maven.org/maven2"
    		 url "https://plugins.gradle.org/m2/"
    	}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.0.1")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'spring-boot'
apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'

jar {
    baseName = 'DIP-Gateway'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "http://repo1.maven.org/maven2" }
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
    maven { url "https://maven.artifactory.homedepot.com/artifactory/libs-release-local" }
}

dependencies {
  compile('DIP:DIPCommon:1.0.6'){
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-jdbc'
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-data-jpa'
    exclude module: "logback-classic"
  }
	compile("org.springframework.boot:spring-boot-starter-actuator") {
		exclude module: "spring-boot-starter-logging"
		exclude module: "logback-classic"
		exclude module: "slf4j-log4j12"
	}
    compile("org.springframework.boot:spring-boot-actuator-docs") {
		exclude module: "spring-boot-starter-logging"
		exclude module: "logback-classic"
		exclude module: "slf4j-log4j12"
	}
    compile("org.projectlombok:lombok") {
		exclude module: "spring-boot-starter-logging"
		exclude module: "logback-classic"
		exclude module: "slf4j-log4j12"
	}
	compile("org.springframework.boot:spring-boot-starter-web") {
		exclude module: "spring-boot-starter-logging"
		exclude module: "logback-classic"
		exclude module: "slf4j-log4j12"
	}
	compile("org.springframework.boot:spring-boot-starter-ws") {
		exclude module: "spring-boot-starter-logging"
		exclude module: "logback-classic"
		exclude module: "slf4j-log4j12"
	}
	compile("org.springframework.boot:spring-boot-starter-log4j2")
	compile("org.springframework.boot:spring-boot-starter-aop") {
		exclude module: "spring-boot-starter-logging"
		exclude module: "logback-classic"
		exclude module: "slf4j-log4j12"
	}
	compile("org.springframework.boot:spring-boot-starter-jersey"){
		exclude module: "spring-boot-starter-logging"
		exclude module: "logback-classic"
		exclude module: "slf4j-log4j12"
	}
	compile("com.google.code.gson:gson")
	compile("org.apache.commons:commons-lang3:3.4")  {
		exclude module: "spring-boot-starter-logging"
		exclude module: "logback-classic"
		exclude module: "slf4j-log4j12"
	}
	compile ("org.apache.logging.log4j:log4j-core")
	compile ("org.apache.logging.log4j:log4j-api")
	compile ("org.apache.httpcomponents:httpclient")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.springframework.restdocs:spring-restdocs-mockmvc:1.0.0.RELEASE")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-starter-parent:Brixton.M3"
	}
}

jacocoTestReport {
    group = "Reporting"
    description = "Generate JaCoCo coverage reports after running tests."
  	afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: [])
        })
    }
}

eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.7'
}
